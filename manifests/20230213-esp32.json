{"title":"ESP32 入门引导","pub_time":1676273519000,"mod_time":1676293179000,"content":"&emsp;&emsp;关于 ESP32，我就不多作介绍了。不了解的话也可以查看乐鑫官网的[芯片介绍](https://www.espressif.com/zh-hans/products/socs)。  \n\n&emsp;&emsp;根据乐鑫社区中的[课程](https://www.espressif.com/zh-hans/ecosystem/community-engagement/courses)，ESP32 有许多开发方法……我选择 ESP-IDF，看起来是官方支持力度最大的，问题应该也是最少的。  \n&emsp;&emsp;虽然乐鑫的 [ESP-IDF 编程指南](https://docs.espressif.com/projects/esp-idf/zh_CN/stable/esp32/)内有很多资料，但缺少清晰的引导，让人感觉无从下手。我在看了[快速入门](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/get-started/index.html)和相关部分之后还是一头雾水……只知道`idf.py`是 ESP32 开发的核心命令，但其他东西都像个黑箱，不知道有什么，甚至不知道下一步该做什么。  \n\n&emsp;&emsp;所以我这篇文章也只是作为一个**引导**，不会介绍太多的具体操作。  \n\n## ESP-IDF 编程环境\n\n> &emsp;&emsp;ESP-IDF 是乐鑫官方的物联网开发框架，适用于 ESP32、ESP32-S、ESP32-C 和 ESP32-H 系列 SoC。它基于 C/C++ 语言提供了一个自给自足的 SDK，方便用户在这些平台上开发通用应用程序。\n\n&emsp;&emsp;ESP-IDF 的开发环境使用 C/C++ 语言编程，CMake 构建系统。  \n\n&emsp;&emsp;ESP-IDF 的具体安装教程可以查阅官方指南中的[安装](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/get-started/index.html#get-started-how-to-get-esp-idf)一节，不仅有编辑器集成，也可以手动安装使用。我习惯的选择是 [ESP-IDF VS Code Extension](https://github.com/espressif/vscode-esp-idf-extension)，实际体验之后感觉和手动安装使用相比确实方便了不少。  \n\n&emsp;&emsp;在 VS Code 使用 C/C++ 扩展的话，建议将`Intelli Sense Engine`设置为`default`，而非 ESP-IDF 默认的`Tag Parser`，因为前者代码提示效果我个人感觉比后者要好。  \n```json\n{\n    \"C_Cpp.intelliSenseEngine\": \"default\"\n}\n```\n\n## 工程的新建、编译、烧录……\n\n&emsp;&emsp;关于这部分可以查看官方指南中的[使用 ESP-IDF (Linux)](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/get-started/linux-macos-setup.html#get-started-linux-macos-first-steps)、[使用 ESP-IDF (Windows)](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32s3/get-started/windows-setup.html#id6)。但指南中的使用方法都是基于直接调用`idf.py`命令的。  \n\n&emsp;&emsp;对于 VS Code 用户，可以按下`F1`并输入`ESP-IDF <你想要的操作>`以搜索操作，例如`ESP-IDF: New Project`即可创建新项目，在输入的过程的 VS Code 会不断进行提示，在发现自己想要的操作后用方向键加回车即可调用对应操作了。但并不是所有`idf.py`命令都在 VS Code 扩展中有对应的，具体支持操作可以查看 [GitHub](https://github.com/espressif/vscode-esp-idf-extension#available-commands)  \n\n## 建议阅读\n\n&emsp;&emsp;在安装完 ESP-IDF 并大体浏览过示例项目后，我想你应该有不少问题，诸如：CMake 里写的是啥，有什么作用？为什么没有`main`函数？为什么代码在`main`目录下而不是常规的`src`目录？  \n&emsp;&emsp;建议阅读下方的两篇文章，了解程序运行过程和构建系统。然后……我觉得算是基本入门了，可以开始进行自己的项目了。  \n\n- [应用程序的启动流程](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-guides/startup.html)\n- [构建系统](https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-guides/build-system.html)\n\n## 其他资料\n\n&emsp;&emsp;关于 CMake，它是使用最广泛的 C/C++ 项目构建系统，网上已经有许多教程。\n\n- [CMake 官方教程](https://cmake.org/cmake/help/latest/guide/tutorial/index.html)\n- [cmake-examples](https://github.com/ttroy50/cmake-examples)\n\n&emsp;&emsp;关于 C/C++ 编程语言，[cppreference.com](https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5) 作为参考资料非常不错。  \n\n## 可能的问题\n\n### 无法访问串口（Linux）\n\n&emsp;&emsp;通常是因为权限不足导致的，可以通过`ls -l /dev/tty*`命令查看串口设备所在的用户组，然后将自己加入进去即可。  \n```bash\n# Arch\nsudo usermod -a -G uucp $USER\n# Debian / Ubuntu\nsudo usermod -a -G dialout $USER\n```\n"}