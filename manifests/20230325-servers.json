{"title":"使用 netboot.xyz 和 Ansible 部署云服务器","pub_time":1679737200000,"content":"# 故事\n\n&emsp;&emsp;我目前有几台服务器，其中有在国内的、也有在国外的。它们各自有不同的分工，负责运行不同的服务，甚至系统也不太一样，所以部署起来是比较繁琐的。之前我一直是人工 SSH 上去，配合自己零零散散写的脚本部署或更新服务，因此我非常担心哪天服务器炸了需要重新部署上面的东西……  \n\n&emsp;&emsp;根据墨菲定律，我的服务器总有一天是要炸的，~~就算它自己不炸我也会主动把他炸了~~。最近我在新加坡的服务器就出问题了，无法更新系统，因为软件源的下载速度不知为何降低到了 50KB/S，我大致搜索了一下也没找到解决方案，而我也不想找客服……于是我主动把服务器实例销毁了，重新开了新的服务器。  \n\n&emsp;&emsp;这次为了避免重蹈覆辙，我选择了以稳定性著称的 Debian 系统（之前是 Arch），但我对任何云服务厂商提供的镜像都不信任，所以我还需要手动为服务器重装系统，之前装 Arch 我用的是别人写好的脚本（我自己也大概看了一遍代码），不过这次我没有找到现成的 Debian 脚本，但我找到了 [netboot.xyz](https://netboot.xyz/) —— 一个可以让你启动到各种系统安装镜像的 Bootloader。  \n&emsp;&emsp;虽然成功启动到了 Debian 的安装镜像，但剩下的部分仍然是我手动操作……所幸，Debian 提供了 [Preseed（预置）](https://www.debian.org/releases/stable/amd64/apb.zh-cn.html) 功能，可以让用户使用预先写好的系统配置进行安装。不过安装系统也没啥工作量，安装过程中我也可以干别的事，~~所以以后再折腾这个，先把 netboot.xyz 用明白~~。  \n\n&emsp;&emsp;系统的问题解决了，可我该如何部署不同的服务呢？我想起来之前一直没有学的 [Ansible](https://github.com/ansible/ansible)，因为之前没有找到靠谱的教程，也没有很强烈的需求去看官方的英文文档。但现在有需求了……边学边用了两三天后——真香！  \n\n&emsp;&emsp;就这样，靠着新工具，我这几天把我的服务器都炸了……并重新安装了系统和服务，而且再也不用担心服务器出问题了，大不了就是重装系统并运行一遍 Ansible。  \n\n# netboot.xyz\n\n&emsp;&emsp;[netboot.xyz](https://netboot.xyz/) 的使用非常简单，只需下载镜像并导入到对应介质即可，[官方文档](https://netboot.xyz/docs/category/booting-methods)对各种介质的启动都有介绍，但似乎没有哪一条适合云服务器环境。所以我只介绍云服务器环境下的使用步骤。  \n\n来自写完文章后的我：其实[官方文档](https://netboot.xyz/docs/kb/providers/digitalocean)提供了云服务器环境的使用方法，大致思路是配置 GRUB，使其可以启动到 netboot.xyz，而无需像我这样直接把镜像写入硬盘。  \n\n以下操作均在云服务器上完成：\n\n**零**、部分云服务器厂商可能没有 DHCP 服务，需要我们自己记录服务器的网络情况，包括 **IP、子网掩码、网关、DNS**，以免之后 netboot.xyz 没有网络可用，而到时你多半也回不到原系统了。\n```bash\nip addr              # IP 地址、子网掩码\nip route             # 网关\ncat /etc/resolv.conf # DNS\n```\n\n**一**、下载 netboot.xyz 的镜像。  \n```bash\nwget https://boot.netboot.xyz/ipxe/netboot.xyz.img\n```\n\n**二**、将镜像通过`dd`命令写入系统的启动盘（**确认要重装系统再做这个操作！**）。  \n```bash\ndd if=netboot.xyz.img of=<系统启动盘>\n```\n可以使用`df`命令查看系统硬盘的挂载情况，我所管理的几个服务器都是`/dev/vda`。  \n\n**三**、重启系统，并改用云服务器厂商提供的 VNC 进行操作。剩下的步骤按照 netboot.xyz 界面的说明即可完成。  \n\n# Ansible\n\n&emsp;&emsp;[Ansible](https://github.com/ansible/ansible) 是一套开源的，用于自动化配置 Linux、Windows 等系统的工具软件，于 2015 年被 Redhat 收购。Ansible 对接受配置的系统几乎没有任何要求，只需要有 SSH 和 Python 就好。  \n\n&emsp;&emsp;具体使用方法我就不多说了，因为我也没用多久。  \n&emsp;&emsp;我主要想写写我对 Ansible 的整体认识，方便新来者快速入门。  \n\n&emsp;&emsp;Ansible 有三种重要文件：\n\n- `ansible.cfg`，详见 [Ansible 的配置文件](https://ansible-tran.readthedocs.io/en/latest/docs/intro_configuration.html)和 [Ansible Configuration Settings](https://docs.ansible.com/ansible/latest/reference_appendices/config.html)。\n- `Inventory`，记录服务器的各种信息、变量，并将服务器分组，详见 [Inventory 文件](https://ansible-tran.readthedocs.io/en/latest/docs/intro_inventory.html)。\n- `Playbook`，定义了配置不同服务所需要的操作，详见 [Playbooks](https://ansible-tran.readthedocs.io/en/latest/docs/playbooks.html)。\n\n&emsp;&emsp;Ansible 有两种主要使用方法，分别是 ad hoc 和 playbooks，两种用法分别具有不同的使用场景。\n\n- **ad hoc** 用于一次性的任务，例如你突然想重启所有服务器，详见 [Using Ansible command line tools](https://docs.ansible.com/ansible/latest/command_guide/index.html)。\n- **playbooks** 用于重复性的任务，例如部署某个服务，详见 [Using Ansible playbooks](https://docs.ansible.com/ansible/latest/playbook_guide/index.html)。  \n\n&emsp;&emsp;知道这几种文件和使用方法后，我们大致也知道 Ansible 的工作流程了。  \n&emsp;&emsp;将服务器相关信息写在`Inventory`中；  \n&emsp;&emsp;将部署服务的步骤写在`Playbook`中；  \n&emsp;&emsp;使用 Ansible 对指定服务器运行`Playbook`。  \n\n&emsp;&emsp;大概了解这些这些东西以后就可以更流畅地阅读文档了。  \n\n[Ansible Community Documentation](https://docs.ansible.com/ansible/latest/index.html)  \n[Ansible 中文权威指南](https://ansible-tran.readthedocs.io/en/latest/)  \n"}