{"title":"时隔两年，再次安装 archlinux 双系统","pub_time":1674225729000,"mod_time":1691586000000,"content":"&emsp;&emsp;上一次安装 [archlinux](https://archlinux.org/) 还是在两年前，当时的我还会折腾各种桌面主题，并在 xfce4 中模仿了 MacOS 的观感，甚至还在 Keylol 发了记录的 [帖子](https://keylol.com/t737267-1-1)。  \r\n&emsp;&emsp;但用了大概半年后，我最终还是全面回到了 Windows，因为当时在学习嵌入式（51、stm32）的开发，在 Linux 环境下没有方便的开发环境，来回重启切换系统也非常麻烦，而且硬盘剩余空间也有些捉襟见肘……  \r\n&emsp;&emsp;再往后，我就以 WSL 和 VMware 为主了，且系统用的几乎都是 Ubuntu，因为安装方便，很快就能开展实际工作，且 VS Code 的远程开发非常方便，在远程和本地编辑代码几乎没什么两样。  \r\n\r\n&emsp;&emsp;但最近由于用到了无法在 WSL 下正常运行的软件（需要 GPU，但按照[文档](https://docs.nvidia.com/cuda/wsl-user-guide/index.html)配置后依然不行），且一时间也没有什么解决方案。所以需要使用双系统，但对于一些常用软件，Ubuntu 使用 Snap 安装，而 Snap 在国内体验实在不太好，我也懒得折腾修改……系统就决定是 archlinux 了。\r\n\r\n## 安装 archlinux（虚拟机）\r\n\r\n&emsp;&emsp;得益于 [archinstall](https://wiki.archlinuxcn.org/wiki/Archinstall)，现在安装 archlinux 比以前方便多了。不再需要手动配置系统的各种细节，甚至连桌面环境也能直接指定并安装。  \r\n![截图](20230120-archinstall-1.png)  \r\n![截图](20230120-archinstall-2.png)  \r\n&emsp;&emsp;使用 archinstall 非常简单，在进入安装镜像后输入`archinstall`并按下回车即可，之后便会进入一个具有许多选项的界面。  \r\n&emsp;&emsp;各个选项的作用就不必多说了，因为 archinstall 有很细致的引导。但有一点要注意，记得设置`Network configuration`，否则之后进入系统没有网络，而手动连接网络比较麻烦，在不熟悉的情况下甚至重装都比这来的快。  \r\n\r\n&emsp;&emsp;最让人感觉方便的是和`Profile`选项和`--config`参数。`Profile`选项内有大量由 archinstall [预先写好的安装配置](https://gitlab.archlinux.org/archlinux/archinstall/-/tree/master/profiles)，可以让用户按照需求基于不同的 profile （server、desktop等）进行安装。另外就是`--config`参数，可以让 archinstall 从本地或网络读取具体的配置文件，这在重复安装系统时可以省去大量选择相同选项的时间， 具体配置方法可以查看[文档](https://archinstall.readthedocs.io/installing/guided.html#installing-directly-from-a-configuration-file)。  \r\n&emsp;&emsp;为了方便以后重装系统，我也编写了两个配置文件，一个针对 VMware 虚拟机，另一个针对双系统。在配置文件中我主要做了：设置软件源（`China`）、设置`kde`作为 profile、预装`docker`、`firefox`等常用软件、预装中文字体及输入法（须进入系统后手动启用）。  \r\n&emsp;&emsp;遗憾的是我没能把 [yay](https://github.com/Jguer/yay) 集成到配置文件中，因为安装 yay 需要连接到 GitHub，考虑到国内复杂的网络情况，还是让用户在进入系统后自己安装比较合适。  \r\n\r\n- [archinstall.json](archinstall.json)\r\n- [archinstall-vm.json](archinstall-vm.json)\r\n\r\n```bash\r\n# 原本打算集成到配置文件中的 yay 安装命令，感觉删了有点可惜，就放这了\r\n# 但没有完整测试过，所以不建议使用\r\n# 给 /home 目录下的所有用户安装 yay\r\nls -1 /home | while read uu ; do\r\n  printf \"$uu ALL=(ALL) NOPASSWD: ALL\" > \"/etc/sudoers.d/$uu\";\r\n  sudo -H -u $uu bash -c \\\r\n  'cd ~ && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si';\r\n  rm -f \"/etc/sudoers.d/$uu\";\r\ndone\r\n```\r\n\r\n&emsp;&emsp;在进入系统后，建议安装 yay 或其他 [AUR](https://wiki.archlinuxcn.org/wiki/Arch_%E7%94%A8%E6%88%B7%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93_(AUR)) 工具，因为手动安装 AUR 包比较麻烦，而 AUR 又是 archlinux 使用中非常重要的一环，许多常用软件都可以从这里方便地安装。  \r\n\r\n> 来自 2023 年 8 月的我：  \r\n> &emsp;&emsp;上文的`archinstall.json`和`archinstall-vm.json`都因为`archinstall`的更新而过期了。  \r\n> &emsp;&emsp;为了方便版本管理，现在的配置文件保存于 [CYTMWIA/scripts](https://github.com/CYTMWIA/scripts/tree/master/archlinux)。\r\n\r\n## 实际安装双系统\r\n\r\n&emsp;&emsp;最近几个版本的 archinstall（2.5.1、2.5.2）似乎无法正常识别 nvme 硬盘，现象如同 [issues#1593](https://github.com/archlinux/archinstall/issues/1593)。在大概研究了源代码后，发现其实可以在 archinstall 外手动完成硬盘相关操作（分区、挂载），具体步骤如下：  \r\n\r\n1. 按照 [ArchWiki](https://wiki.archlinux.org/title/Installation_guide#Partition_the_disks) 的说明进行硬盘分区、格式化。\r\n2. 将分区分别挂载到 `/mnt`、`/mnt/boot` 目录下（其他目录也行，但要与之后的 archinstall 配合）。\r\n3. 修改 archinstall 源代码，具体位置为 `/usr/lib/python3.10/site-packages/archinstall/examples/guilded.py`。\r\n    1. 将第 [144](https://github.com/archlinux/archinstall/blob/53a2797af6ac0832bf7dd00dfe96b8ea1867db2e/examples/guided.py#L144) 行的 `if` 及其内容删除。\r\n    2. 将第 [315](https://github.com/archlinux/archinstall/blob/53a2797af6ac0832bf7dd00dfe96b8ea1867db2e/examples/guided.py#L315) 行的 `perform_filesystem_operations()` 删除。\r\n    3. 将第 [316](https://github.com/archlinux/archinstall/blob/53a2797af6ac0832bf7dd00dfe96b8ea1867db2e/examples/guided.py#L316) 行 `perform_installation` 的参数直接改为 `/mnt`（默认值是别的路径）。\r\n    ![修改](20230120-archinstall-注释挂载.jpg)  \r\n    ![修改](20230120-archinstall-注释硬盘操作及修改路径.jpg)  \r\n4. 然后按照正常情况使用 archinstall 即可，硬盘相关操作现在会被跳过。  \r\n   但 `Drive` 和 `Disk Layouts` 选项最好还是调整为你所期望的参数，因为不知道 archinstall 之后的操作会不会使用到（虽然我没调整也安装成功了）。  \r\n\r\n**在进行硬盘相关操作时请务必小心！**  \r\n**要定要仔细确认硬盘号是否正确无误！**  \r\n**避免因此带来不必要的麻烦，甚至丢失数据！**  \r\n\r\n## 最后\r\n\r\n&emsp;&emsp;在安装双系统的过程中，我不幸误操作导致数据分区被作为交换分区使用……所幸发现及时且重要数据也都几乎救了回来。  \r\n\r\n&emsp;&emsp;有条件的话请尽量做好数据备份，无论是定时备份还是即时备份，无论是备份到云端还是本地 NAS，有备份和没有备份是完全不同的两种情况！\r\n\r\n&emsp;&emsp;我们永远不知道明天和意外哪个先来。\r\n"}